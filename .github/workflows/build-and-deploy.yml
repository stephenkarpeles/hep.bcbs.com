# Builds and deploys the Gatsby content
---
name: Build and Deploy
on:
  push:
    branches:
      - '**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
  repository_dispatch:
    types: [content_update]

jobs:
  build:
    name: Build Gatsby
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Gatsby
        run: npm install -g gatsby-cli

      - name: Retain Gatsby cache, output, and dependencies
        uses: actions/cache@v2
        with:
          path: |
            .cache
            public
            node_modules
          key: ${{ runner.os }}-gatsby-cache

      - name: Install dependencies
        run: npm install

      - name: Build Gatsby
        run: gatsby build --prefix-paths

      - name: Include the AWS Codebuild file
        run: cp buildspec.yml public/buildspec.yml

      - name: Archive the Gatsby output
        run: tar -czf public.tar.gz public/

      - name: Upload the Gatsby output archive
        uses: actions/upload-artifact@v2
        with:
          name: gatsby-public
          path: public.tar.gz

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-20.04
    needs: build
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'repository_dispatch' ||
      startsWith(github.ref, 'refs/tags/') ||
      github.ref == 'refs/heads/dev' ||
      github.ref == 'refs/heads/uat' ||
      github.ref == 'refs/heads/stage'
    steps:
      - name: Determine the execution context
        id: context
        run: |
          # Determine the environment
          if [[ ${GITHUB_REF} == "refs/tags/"* || ${GITHUB_REF} == "refs/heads/master" ]]; then
            env="prod"
          else
            env=$(echo ${GITHUB_REF#refs/heads/})
          fi
          ENV=$(echo ${env} | tr '[:lower:]' '[:upper:]')
          # Add a flag to various secrets for production
          if [[ ${env} == "prod" ]]; then
            ACCOUNT="_PROD"
          fi
          # Set outputs for later steps
          echo "##[set-output name=env;]$(echo ${env})"
          echo "##[set-output name=access-key;]$(echo ARCHIVE_AWS_ACCESS_KEY_ID${ACCOUNT})"
          echo "##[set-output name=secret-key;]$(echo ARCHIVE_AWS_SECRET_ACCESS_KEY${ACCOUNT})"
          echo "##[set-output name=upload-role;]$(echo ARCHIVE_AWS_UPLOAD_ROLE_ARN${ACCOUNT})"
          echo "##[set-output name=invalidation-role;]$(echo ARCHIVE_AWS_INVALIDATION_ROLE_ARN${ACCOUNT})"
          echo "##[set-output name=cloudfront-id;]$(echo AWS_CLOUDFRONT_ID_${ENV})"

      - name: Retrieve the build artifact
        uses: actions/download-artifact@v2
        with:
          name: gatsby-public
          path: /tmp/

      - name: Expand the build artifact
        run: tar -xzf /tmp/public.tar.gz

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets[steps.context.outputs.access-key] }}
          aws-secret-access-key: ${{ secrets[steps.context.outputs.secret-key] }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets[steps.context.outputs.upload-role] }}
          role-external-id: ${{ secrets.ARCHIVE_AWS_UPLOAD_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: GitHubActionsStaticSiteUpload
          # Temporarily disable session tagging
          role-skip-session-tagging: true

      - name: Deploy the site contents to S3
        if: |
          !startsWith(github.ref, 'refs/tags/') ||
          github.ref != 'refs/heads/master'
        run: |
          aws s3 sync \
          --acl bucket-owner-full-control \
          --delete public/ \
          s3://bcbscom-${{ steps.context.outputs.env }}-gatsby-website/the-health-of-america/healthequity/

      - name: Assume the Cloudfront invalidation role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets[steps.context.outputs.invalidation-role] }}
          role-duration-seconds: 1200
          role-session-name: GitHubActionsCloudfrontInvalidate
          # Temporarily disable session tagging
          role-skip-session-tagging: true

      - name: Invalidate the Cloudfront cache
        run: |
          invalidation_id=$(aws cloudfront create-invalidation --distribution-id ${{ secrets[steps.context.outputs.cloudfront-id] }} --paths "/the-health-of-america/healthequity/" "/the-health-of-america/healthequity/*" | grep Id | awk -F'"' '{ print $4}')
          aws cloudfront wait invalidation-completed --distribution-id ${{ secrets[steps.context.outputs.cloudfront-id] }} --id ${invalidation_id}
